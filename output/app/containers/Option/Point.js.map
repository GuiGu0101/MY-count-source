{"version":3,"sources":["/app/containers/Option/Point.jsx"],"names":[],"mappings":"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","file":"/app/containers/Option/Point.jsx","sourcesContent":["/**\n * Created by guigu on 2017/8/16.\n */\nimport React, {PropTypes, Component} from 'react';\nimport PureRenderMixin from 'react-addons-pure-render-mixin';\nimport {connect} from 'react-redux';\nimport {\n    CellsTitle,\n    Cells,\n    Cell,\n    Form,\n    FormCell,\n    CellHeader,\n    CellBody,\n    CellFooter,\n    Select,\n    Input,\n    Label,\n    ButtonArea,\n    Button\n} from '../../components/react-qtui';\nimport * as groupCallBack from '../../actions/CallBack/group';\n\nconst mapStateToProps = state => {\n    return {\n        baseInfo: state.baseInfo,\n    };\n};\n\n// React & Redux 绑定\n@connect(mapStateToProps)\nexport default class Point extends Component {\n    constructor(props, context) {\n        super(props, context);\n        this.shouldComponentUpdate = PureRenderMixin.shouldComponentUpdate.bind(this);\n        this.state = {\n            first: '',\n            second: '',\n            third: '',\n            type: 'land',\n            gameId: 0,\n            games: {\n                land: [],\n                water: []\n            }\n        };\n    }\n\n    formatGame(games) {\n        const land = [];\n        const water = [];\n        games.map(game => {\n            if (game.type === 'water') {\n                water.push(game);\n            } else {\n                land.push(game);\n            }\n        });\n        this.setState({\n            games: {land, water}\n        });\n    }\n\n    componentWillMount() {\n        const {games} = this.props.baseInfo;\n        this.formatGame(games);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const {games} = nextProps.baseInfo;\n        this.formatGame(games);\n    }\n\n    componentDidMount() {\n    }\n\n    submit() {\n        const {first, second, third, type} = this.state;\n        let {gameId} = this.state;\n        if (first === '' || second === '' || first === '') {\n            alert('有未填写的名次');\n            return false;\n        } else {\n            if (gameId === 0) {\n                gameId = this.state.games[type][0].id;\n            }\n            groupCallBack.submitPoint({\n                first,\n                second,\n                third,\n                type,\n                game_id: gameId\n            }).then(res => {\n                if (typeof res.json === 'function') {\n                    return res.json();\n                }\n                return res;\n            }).then(data => {\n                console.log(data);\n                if (data.status !== 1) {\n                    alert(data.message);\n                } else {\n                    alert('游戏名次登记成功');\n                    this.setState({\n                        first: '',\n                        second: '',\n                        third: '',\n                        // type: 'land',\n                        gameId: 0\n                    });\n                }\n            });\n            return true;\n        }\n    }\n\n    render() {\n        const {user, type, games} = this.state;\n        console.log(games)\n        return (\n            <div>\n                <div\n                    style={{textAlign: 'center', color: '#00ACDC', fontSize: '24px'}}>游戏名次登记\n                </div>\n                <CellsTitle>类型</CellsTitle>\n                <Form>\n                    <FormCell select selectPos=\"after\">\n                        <CellBody>\n                            <Select onChange={e => this.setState({type: e.target.value})} value={this.state.type}>\n                                <option value='land'>陆地</option>\n                                <option value='water'>水上</option>\n                            </Select>\n                        </CellBody>\n                    </FormCell>\n                </Form>\n                <CellsTitle>游戏</CellsTitle>\n                <Form>\n                    <FormCell select selectPos=\"after\">\n                        <CellBody>\n                            <Select ref=\"gameSelect\" onChange={e => this.setState({gameId: e.target.value})} value={this.state.gameId}>\n                                {\n                                    games[type].map(game => (\n                                        <option value={game.id} key={game.id}>{game.name}</option>\n                                    ))\n                                }\n                            </Select>\n                        </CellBody>\n                    </FormCell>\n                </Form>\n                <CellsTitle>名次</CellsTitle>\n                <Form>\n                    <FormCell>\n                        <CellHeader>\n                            <Label>第一名</Label>\n                        </CellHeader>\n                        <CellBody>\n                            <Input type=\"text\" placeholder=\"输入组内任一魅友编号\"\n                                   onChange={e => this.setState({first: e.target.value})} value={this.state.first}/>\n                        </CellBody>\n                    </FormCell>\n                    <FormCell>\n                        <CellHeader>\n                            <Label>第二名</Label>\n                        </CellHeader>\n                        <CellBody>\n                            <Input type=\"text\" placeholder=\"输入组内任一魅友编号\"\n                                   onChange={e => this.setState({second: e.target.value})} value={this.state.second}/>\n                        </CellBody>\n                    </FormCell>\n                    <FormCell>\n                        <CellHeader>\n                            <Label>第三名</Label>\n                        </CellHeader>\n                        <CellBody>\n                            <Input type=\"text\" placeholder=\"输入组内任一魅友编号\"\n                                   onChange={e => this.setState({third: e.target.value})} value={this.state.third}/>\n                        </CellBody>\n                    </FormCell>\n                </Form>\n                <ButtonArea>\n                    <Button\n                        onClick={this.submit.bind(this)}>\n                        确认登记\n                    </Button>\n                </ButtonArea>\n            </div>\n        );\n    }\n}"]}