{"version":3,"sources":["/app/containers/App.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;qBAC0C,OAAO;;;;0CAChB,gCAAgC;;IAArD,eAAe;;qBACM,OAAO;;0BAClB,aAAa;;2BACT,cAAc;;gCACT,sBAAsB;;IAAzC,aAAa;;mCAEI,0BAA0B;;AAEvD,IAAM,eAAe,GAAG,SAAlB,eAAe,CAAG,KAAK,EAAI;AAC7B,WAAO,EAAC,QAAQ,EAAE,KAAK,CAAC,QAAQ,EAAE,SAAS,EAAE,KAAK,CAAC,SAAS,EAAC,CAAC;CACjE,CAAC;AACF,IAAM,kBAAkB,GAAG,SAArB,kBAAkB,CAAG,QAAQ,EAAI;AACnC,WAAO;AACH,oBAAY,EAAE,+BAAmB,aAAa,EAAE,QAAQ,CAAC;KAC5D,CAAC;CACL,CAAC;;;;IAII,GAAG;cAAH,GAAG;;AAEM,aAFT,GAAG,CAEO,KAAK,EAAE,OAAO,EAAE;;;AACxB,oFAAM,KAAK,EAAE,OAAO,EAAE;AACtB,YAAI,CAAC,qBAAqB,GAAG,eAAe,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC9E,YAAI,CAAC,KAAK,GAAG;AACT,wBAAY,EAAE,IAAI;SACrB,CAAC;KACL;;iBARC,GAAG;;eAUa,8BAAE;;;gBACX,YAAY,GAAI,IAAI,CAAC,KAAK,CAA1B,YAAY;;AACjB,wBAAY,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC;uBAAM,MAAK,QAAQ,CAAC,EAAC,YAAY,EAAE,IAAI,EAAC,CAAC;aAAA,CAAC,CAAC;SAE9E;;;eAEK,kBAAG;yBAC6B,IAAI,CAAC,KAAK;gBAArC,SAAS,UAAT,SAAS;gBAAE,YAAY,UAAZ,YAAY;gBACvB,WAAW,GAA4B,SAAS,CAAhD,WAAW;gBAAE,WAAW,GAAe,SAAS,CAAnC,WAAW;gBAAE,SAAS,GAAI,SAAS,CAAtB,SAAS;;AAC1C,gBAAI,WAAW,CAAC,IAAI,EAAE;AAClB,0BAAU,CAAC,YAAM;AACb,gCAAY,CAAC,WAAW,EAAE,CAAC;iBAC9B,EAAE,IAAI,CAAC,CAAC;aACZ;AACD,gBAAI,SAAS,CAAC,IAAI,EAAE;AAChB,0BAAU,CAAC,YAAM;AACb,gCAAY,CAAC,SAAS,EAAE,CAAC;iBAC5B,EAAE,IAAI,CAAC,CAAC;aACZ;AACD,gBAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE;AAC1B,uBAAQ;;sBAAO,IAAI,EAAC,SAAS,EAAC,IAAI;;iBAAc,CAAE;aACrD;AACD,mBACI;;;gBACK,IAAI,CAAC,KAAK,CAAC,QAAQ;gBACpB;;sBAAO,IAAI,EAAC,mBAAmB,EAAC,IAAI,EAAE,WAAW,CAAC,IAAK;oBAAE,WAAW,CAAC,IAAI;iBAAS;gBAClF,+DAAO,IAAI,EAAC,SAAS,EAAC,IAAI,EAAE,WAAY,GAAE;gBAC1C;;sBAAS,IAAI,EAAC,MAAM,EAAC,IAAI,EAAE,SAAS,CAAC,IAAK;oBAAE,SAAS,CAAC,IAAI;iBAAW;aACnE,CACR;SACL;;;eAEgB,6BAAG,EAGnB;;;;;AAAA;;;eAGiB,8BAAG;;AAEjB,kBAAM,CAAC,kBAAkB,GAAG,QAAQ,CAAC,IAAI,CAAC;SAC7C;;;eAnDC,GAAG;AAAH,OAAG,GADR,yBAAQ,eAAe,EAAE,kBAAkB,CAAC,CACvC,GAAG,KAAH,GAAG;WAAH,GAAG;;;qBAsDM,GAAG","file":"/app/containers/App.jsx","sourcesContent":["// 相当于layout\nimport React, {PropTypes, Component} from 'react';\nimport * as PureRenderMixin from 'react-addons-pure-render-mixin';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {hashHistory} from 'react-router';\nimport * as globalActions from '../actions/globalVal';\n\nimport {Toast, Toptips} from '../components/react-qtui';\n\nconst mapStateToProps = state => {\n    return {baseInfo: state.baseInfo, globalVal: state.globalVal};\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        globalAction: bindActionCreators(globalActions, dispatch),\n    };\n};\n\n// React & Redux 绑定\n@connect(mapStateToProps, mapDispatchToProps)\nclass App extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.shouldComponentUpdate = PureRenderMixin.shouldComponentUpdate.bind(this);\n        this.state = {\n            baseInfoDone: true,\n        };\n    }\n\n    componentWillMount(){\n        let {globalAction} = this.props;\n        globalAction.getBaseInfo().then(() => this.setState({baseInfoDone: true}));\n\n    }\n\n    render() {\n        const {globalVal, globalAction} = this.props;\n        const {showSuccess, showLoading, showError} = globalVal;\n        if (showSuccess.show) {\n            setTimeout(() => {\n                globalAction.hideSuccess();\n            }, 1500);\n        }\n        if (showError.show) {\n            setTimeout(() => {\n                globalAction.hideError();\n            }, 1500);\n        }\n        if (!this.state.baseInfoDone) {\n            return (<Toast icon=\"loading\" show>应用加载中</Toast>);\n        }\n        return (\n            <div>\n                {this.props.children}\n                <Toast icon=\"success-no-circle\" show={showSuccess.show}>{showSuccess.text}</Toast>\n                <Toast icon=\"loading\" show={showLoading}/>\n                <Toptips type=\"warn\" show={showError.show}>{showError.text}</Toptips>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        // 只会执行一次，合适公共数据请求\n        // console.log('layout Didmount');\n    }\n\n    // 路由切换时会触发\n    componentDidUpdate() {\n        // 记录路由切换完成、组件都渲染完成之后，页面的hash（包含了路由信息）\n        window.webappLocationFrom = location.hash;\n    }\n}\n\nexport default App;"]}