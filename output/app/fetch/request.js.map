{"version":3,"sources":["/app/fetch/request.js"],"names":[],"mappings":"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","file":"/app/fetch/request.js","sourcesContent":["/**\n * 请求封装：get post jsonp\n * 利用 fetch API 低版本浏览器通过es6-promise\n * jsonp在跨域的情况下才使用，正常不建议打开注释\n */\nimport 'whatwg-fetch';\nimport 'es6-promise';\nimport qt from '../../static/lib/qt_jssdk';\n// import fetchJsonp from 'fetch-jsonp'\n\n// 将对象拼接成 key1=val1&key2=val2&key3=val3 的字符串形式\nfunction obj2params(obj) {\n    let result = '';\n    for (let item in obj) {\n        result += '&' + item + '=' + encodeURIComponent(obj[item]);\n    }\n    if (result) {\n        result = result.slice(1);\n    }\n    return result;\n}\n\nconst rqMethod = {\n    get: function (url, params) {\n        let cInfo = qt.getClientInfo();\n        console.log(cInfo);\n        // 处理get 参数\n        let data = obj2params(params);\n        if (data) {\n            url += (url.indexOf('?') === -1 ? '?' : '&') + data;\n        }\n\n        return fetch(url, {\n            // credentials: 'include', // 请求默认带 cookie\n            headers: {\n                'Accept': 'application/json, text/plain, */*'\n            },\n            mode: 'cors'\n        });\n    },\n    post: function (url, paramsObj) {\n        let cInfo = qt.getClientInfo();\n        console.log(cInfo);\n        return fetch(url, {\n            method: 'POST',\n            // credentials: 'include',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'Content-Type': 'application/x-www-form-urlencoded'// 默认表单提交\n            },\n            body: obj2params(paramsObj),\n            mode: 'cors'\n        });\n    }\n};\nfunction transUrl(url) {\n    if (url.indexOf('/') === 0) {\n        if (url.indexOf('//') === 0) {\n            return window.location.protocol + url;\n        } else {\n            return window.location.origin + url;\n        }\n    } else {\n        if (url.indexOf('://') !== -1) {\n            return url;\n        } else {\n            return window.location.origin + window.location.pathname + url;\n        }\n    }\n}\nconst clientInfo = qt.getClientInfo();\nif (clientInfo.type !== 'not QT client') {\n    rqMethod.get = function (url, params) {\n        return new Promise(function (resolve, reject) {\n            qt.ajax({\n                url: transUrl(url),\n                type: 'get',\n                data: params,\n                success: function (data) {\n                    resolve(data.result);\n                },\n                fail: function (error) {\n                    if (error.statusCode === 0) {\n                        error.statusCode = 501000;\n                    }\n                    reject({\n                        code: error.statusCode,\n                        message: error.errMsg\n                    });\n                }\n            });\n        });\n    };\n    rqMethod.post = function (url, params) {\n        return new Promise(function (resolve, reject) {\n            qt.ajax({\n                url: transUrl(url),\n                type: 'post',\n                data: params,\n                success: function (data) {\n                    resolve(data.result);\n                },\n                fail: function (error) {\n                    if (error.statusCode === 0) {\n                        error.statusCode = 501000;\n                    }\n                    reject({\n                        code: error.statusCode,\n                        message: error.errMsg\n                    });\n                }\n            });\n        });\n    };\n}\n\nexport function get(url, params) {\n\n    return rqMethod.get(url, params);\n}\n\n// 普通post请求\nexport function post(url, paramsObj) {\n    return rqMethod.post(url, paramsObj);\n}\n\n// jsonp保持与fetch一致的API\n// export function getJsonp (url, data) {\n//     data = obj2params(data);\n//     if (data) {\n//         url += (url.indexOf('?') === -1 ? '?' : '&') + data;\n//     }\n//     let result = fetchJsonp(url, {\n//         // jsonpCallback: 'jsoncallback',\n//         timeout: 3000\n//     });\n//     return result;\n// }"]}