{"version":3,"sources":["/app/components/Dialog/DialogInput.jsx"],"names":[],"mappings":"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","file":"/app/components/Dialog/DialogInput.jsx","sourcesContent":["/**\n * Created by guigu on 2017/7/2.\n */\nimport React, {PropTypes, Component} from 'react';\nimport PureRenderMixin from 'react-addons-pure-render-mixin';\n\n\nexport default class DialogInput extends Component {\n    constructor(props, context) {\n        super(props, context);\n        this.shouldComponentUpdate = PureRenderMixin.shouldComponentUpdate.bind(this);\n    }\n\n    componentWillMount() {\n    }\n\n    componentDidMount() {\n    }\n\n    componentWillUpdate(nextProps, nextState) {\n        if (typeof nextProps.defaultValue !== 'undefined') {\n            nextState.value = nextProps.defaultValue;\n            nextState.showClear = nextProps.defaultValue;\n        }\n    }\n\n    renderButtons(action) {\n        const {label, ...others} = action;\n\n        return (\n            <a href=\"javascript:\" {...others} className=\"dl-input-btn\">{label}</a>\n        );\n    }\n\n    focus() {\n        this.refs.inputDom.focus();\n        console.log(this.refs.inputDom)\n    }\n\n    state = {\n        showClear: !!this.props.defaultValue,\n        value: this.props.defaultValue || '',\n    };\n\n    inputChange(event) {\n        const value = event.target.value;\n        const {onChange} = this.props;\n        let state;\n        if (value) {\n            state = {\n                showClear: true,\n                value: value\n            };\n        } else {\n            state = {\n                value: value\n            };\n        }\n        this.setState(state);\n        onChange && onChange(event);\n    }\n\n    clearInput() {\n        const {onChange} = this.props;\n        this.setState({\n            showClear: false,\n            value: ''\n        });\n        onChange && onChange({target: {value: ''}});\n    }\n\n\n    render() {\n        const {placeholder, button, desc, warn, readOnly, type} = this.props;\n        let cellClassName = 'dialog-input-cell';\n        if (warn) {\n            cellClassName += ' warn';\n        }\n        return (\n            <div className={cellClassName}>\n                <div className=\"dialog-input\">\n                    <div className=\"dl-input-body\">\n                        <input ref=\"inputDom\" className=\"qtui-input\" value={this.state.value} placeholder={placeholder}\n                               autoFocus=\"true\"\n                               onChange={this.inputChange.bind(this)}\n                               readOnly={readOnly} type={type || 'text'}/>\n                        <span className=\"qtui-icon-clear\"\n                              style={{display: this.state.showClear ? 'block' : 'none'}}\n                              onClick={this.clearInput.bind(this)}/>\n                    </div>\n                    {button && this.renderButtons(button)}\n                </div>\n                {\n                    desc &&\n                    <div className=\"dialog-input-desc\">\n                        {desc}\n                    </div>\n                }\n\n            </div>\n        );\n    }\n}"]}